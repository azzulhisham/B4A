Build1=Default,b4a.mobilenav
File1=Layout.bal
FileGroup1=Default Group
Group=Default Group
Library1=core
Library10=xui
Library11=qrcodereaderview
Library2=gps
Library3=json
Library4=okhttp
Library5=okhttputils2
Library6=phone
Library7=runtimepermissions
Library8=webviewextras
Library9=webviewextras2
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="8" android:targetSdkVersion="22"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~	~\n~AddManifestText(<uses-feature android:name="android.hardware.telephony" android:required="false" />)~\n~AddManifestText(<uses-feature android:name="android.hardware.camera" android:required="false" />)~\n~AddManifestText(<uses-feature android:name="android.hardware.camera.autofocus" android:required="false" />)~\n~AddManifestText(<uses-feature android:name="android.hardware.camera.flash" android:required="false" />)~\n~AddManifestText(<uses-permission android:name="android.permission.CAMERA" />)~\n~AddManifestText(<uses-permission android:name="android.hardware.camera" />)~\n~	~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~SetApplicationAttribute(android:usesCleartextTraffic, "true")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~AddManifestText(<uses-feature android:name="android.hardware.location.gps"/>)~\n~
Module1=Starter
NumberOfFiles=1
NumberOfLibraries=11
NumberOfModules=1
Version=12.8
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Mobile Navigation
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Private xui As XUI
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	Private qrcrv As QRCodeReaderView
	Private WebView1 As WebView
	Dim pw As PhoneWakeState
	Dim ph As PhoneId
	
	Private Button1 As Button
	Dim lbl_Lat As Label
	Dim lbl_Lon As Label
	Dim lbl_Cog As Label
	Dim lbl_Sog As Label
	Dim lbl_Api As Label
	Dim lbl_UserId As Label
	Dim lbl_QR As Label
	
	Dim userId As String
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Activity.LoadLayout("Layout")
	pw.KeepAlive(True)
	qrcrv.Visible = False
	
	userId = ph.GetLine1Number
	lbl_UserId.Text = IIf (userId.Length >= 8, userId.SubString(2), "")
	
	'WebView1.Initialize("wv")
	WebView1.LoadUrl("http://ad351ef644a2840e48a104def355969a-1173132100.ap-southeast-1.elb.amazonaws.com:3838/realtime?mmsi=" & lbl_UserId.Text)
End Sub

Sub Activity_Resume
	If Starter.GPS1.GPSEnabled = False Then
		ToastMessageShow("Please enable the GPS device.", True)
		StartActivity(Starter.GPS1.LocationSettingsIntent) 'Will open the relevant settings screen.
	Else
		Starter.rp.CheckAndRequest(Starter.rp.PERMISSION_ACCESS_FINE_LOCATION)
		Wait For Activity_PermissionResult (Permission As String, Result As Boolean)
		If Result Then CallSubDelayed(Starter, "StartGPS")
	End If
End Sub

Sub Activity_Pause (UserClosed As Boolean)
	If UserClosed Then
		pw.ReleaseKeepAlive
		CallSubDelayed(Starter, "StopGPS")
	End If
End Sub

Public Sub GpsStatus (Satellites As List)
	Dim sb As StringBuilder
	sb.Initialize
	sb.Append("Satellites:").Append(CRLF)
	For i = 0 To Satellites.Size - 1
		Dim Satellite As GPSSatellite = Satellites.Get(i)
		sb.Append(CRLF).Append(Satellite.Prn).Append($" $1.2{Satellite.Snr}"$).Append(" ").Append(Satellite.UsedInFix)
		sb.Append(" ").Append($" $1.2{Satellite.Azimuth}"$).Append($" $1.2{Satellite.Elevation}"$)
	Next
	
	'lblSatellites.Text = sb.ToString
End Sub

Public Sub LocationChanged(Location1 As Location)
	lbl_Lat.Text = Location1.Latitude
	lbl_Lon.Text = Location1.Longitude
	lbl_Sog.Text = $"$1.4{Location1.Speed} m/s "$
	lbl_Cog.Text = Location1.Bearing
	
	DateTime.DateFormat = "yyyy-MM-dd"
	DateTime.TimeFormat = "HH:mm:ss"
	
	Dim now As Long = DateTime.Now
	Dim dateStr As String = DateTime.Date(now) & " " & DateTime.Time(now)
	
	Dim Job As HttpJob
	Dim data As Map
	Dim json As JSONGenerator

	Job.Initialize("",Me)
		
	data.Initialize
	data.Put("ts", dateStr)
	data.Put("msgtype", "3")
	data.Put("mmsi", "'" & lbl_UserId.Text & "'")
	data.Put("sog", "'" & Location1.Speed & "'")
	data.Put("cog", "'" & Location1.Bearing & "'")
	data.Put("rot", "0")
	data.Put("heading", "0")
	data.Put("lat", "'" & Location1.Latitude & "'")
	data.Put("lng",  "'" & Location1.Longitude & "'")
	json.Initialize(data)

	If lbl_UserId.Text <> "" Then
		Private str As String = "http://aec45b1e527ea46d394dacdbe444e19c-806738025.ap-southeast-1.elb.amazonaws.com:3838/insert"
	
		Try
			Job.PostString(str, json.ToString)
		
			Job.GetRequest.SetHeader("accept","application/json")
			Job.GetRequest.SetContentType("application/json")

			Wait For (Job) JobDone(Job As HttpJob)

			If Job.Success Then
				lbl_Api.Text = "Success! - "
				Dim result As String = Job.GetString
	
				lbl_Api.Text = result

			Else
				lbl_Api.Text = "Fail! - " & Job.ErrorMessage
			End If
		Catch
			lbl_Api.Text = "[error]::" & LastException.Message
		End Try
	End If

	Job.Release
	
End Sub


Sub Button1_Click
	qrcrv.Visible = True
	'DoEvents
	Sleep(0)
	qrcrv.startScan
End Sub

Sub qrcrv_result_found(retval As String)
	qrcrv.stopScan
	qrcrv.Visible = False
	lbl_QR.Text = retval
End Sub

